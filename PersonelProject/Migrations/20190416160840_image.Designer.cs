// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonelProject.Models.Data;

namespace PersonelProject.Migrations
{
    [DbContext(typeof(PersonelContext))]
    [Migration("20190416160840_image")]
    partial class image
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonelProject.Models.Data.PersonelEntities+City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName");

                    b.Property<string>("Image");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("PersonelProject.Models.Data.PersonelEntities+CityGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("Image");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityGallery");
                });

            modelBuilder.Entity("PersonelProject.Models.Data.PersonelEntities+Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Personel");
                });

            modelBuilder.Entity("PersonelProject.Models.Data.PersonelEntities+PersonelGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.Property<int>("PersonelId");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("PersonelGallery");
                });

            modelBuilder.Entity("PersonelProject.Models.Data.PersonelEntities+CityGallery", b =>
                {
                    b.HasOne("PersonelProject.Models.Data.PersonelEntities+City", "City")
                        .WithMany("CityGallery")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonelProject.Models.Data.PersonelEntities+Personel", b =>
                {
                    b.HasOne("PersonelProject.Models.Data.PersonelEntities+City", "City")
                        .WithMany("Personel")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonelProject.Models.Data.PersonelEntities+PersonelGallery", b =>
                {
                    b.HasOne("PersonelProject.Models.Data.PersonelEntities+Personel", "Personel")
                        .WithMany("PersonelGallery")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
